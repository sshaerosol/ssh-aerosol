#!/bin/bash

for i in "$@"
do
case $i in
# Read the option for Chemistry kinetic mechanism.
# Accepted values: cb05-ozone
# Default: chemistry=cb05-ozone
    -c=*|--chemistry=*)
    chemistry="${i#*=}"
    shift
    ;;
# Read the option to generate a shared lib
# Accepted values: yes or no
# Default: sharedlib = no
    -s=*|--sharedlib=*)      
    sharedlib="${i#*=}"        
    shift                       
    ;;                              
# Read the option to choose whether openmp is taken into account.
# Accepted values: yes or no
# Default: openmp = no
    -o=*|--openmp=*)
    openmp="${i#*=}"
    shift
    ;;
# Read the option to choose which compile mode is used.
# Accepted values: fast, debug
# Default: profile = fast    
    -p=*|--profile=*)
    profile="${i#*=}"
    shift
    ;;
# Read the option to choose whether the gas-phase chemistry
# need to be combined with the h2o mechanism.
# Accepted values: h2o, user, no
# Default: iscombining = no    
    -b=*|--iscombining=*)
    iscombining="${i#*=}"
    shift
    ;;

# Read the option to choose the configuration file for 
# the user-defined scheme.
# Accepted values: file name
# Default value is found below    
    -u=*|--usrcfg=*)
    usrcfg="${i#*=}"
    shift
    ;;

# Read the option to choose the file for species matching of  
# the user-defined scheme.
# Accepted values: file name
# Default value is found below    
    -m=*|--matching=*)
    matching="${i#*=}"
    shift
    ;;
    
esac
done

ulimit -s unlimited
# Path to blitz and netcdf libraries
#export LD_LIBRARY_PATH=/home/cereaadm/usr/local/lib:$LD_LIBRARY_PATH
# Path to blitz and netcdf files
#export CPLUS_INCLUDE_PATH=/home/cereaadm/usr/local/include:$CPLUS_INCLUDE_PATH
# path to netcdf.mod
#export F90FLAGS=-I/home/cereaadm/usr/local/include:$F90FLAGS
# path to swig
#export SWIG=/home/cereaadm/usr/local/bin/swig


if [ -z $chemistry ]; then
    chemistry="cb05-ozone"
fi
# echo "Chemistry: $chemistry"

if [ -z $openmp ]; then
    openmp="no"
fi
echo "OpenMP: $openmp"

if [ -z $sharedlib ]; then                     
    sharedlib="no"                
fi
echo "SharedLib: $sharedlib"

if [ -z $profile ]; then                     
    profile="fast"                
fi
echo "Compiling profile : $profile"

if [ -z $iscombining ]; then                     
    iscombining="no"
else
    # Check whether the given option is accepted.
    if [[ $iscombining != "h2o" && $iscombining != "user" ]]; then
        echo "Accepted values are 'h2o' and 'user'."
        echo "compile -b=h2O -c=cb05-ozone"
        echo "compile -b=user -c=cb05-ozone"
        exit 0                
    fi
fi

if [[ $iscombining == "h2o" || $iscombining == "user" ]]; then
    # available gas-phase mechanisms: cb05-ozone

    # ====== User input =====
    # 1: cb05-ozone
    if [ $chemistry == "cb05-ozone" ]; then
        specieslist="_ciCB05_poa.species"
        reactionlist="CB05_poa_nospack.reactions"
    # 2: racm2-2020rad-ozone
    elif [ $chemistry == "racm2-2020rad-ozone" ]; then
        specieslist="RACM2-2020rad.species"
        reactionlist="RACM2-2020rad_nospack.reactions"
    else
        echo "Please use cb05-ozone or racm2-2020rad-ozone as the chemistry mechanism."
        echo "compile -b=$iscombining -c=cb05-ozone"
        exit 0
    fi

    # Default usrcfg
    if [ -z $usrcfg ]; then                     
        usrcfg="user_defined_scheme.cfg" # "user_defined_scheme_rdc.cfg"
    fi
    echo "usrcfg: $usrcfg"

    # Default matching
    if [ -z $matching ]; then                     
        matching="species_matching.dat" # "species_matching_rdc.dat"
    fi 
    echo "matching file: $matching"
    
    # ====== End of User input =====

    
    cd src/include/CHEMISTRY/$chemistry
    cwd=$PWD
    rm -rf combine_files.py replacement_species.py user_defined_scheme.py
    ln -s ../../../script/combine_files.py
    ln -s ../../../script/replacement_species.py
    ln -s ../../../script/user_defined_scheme.py
    (
        set -e
        python3 combine_files.py --species  $specieslist --reaction $reactionlist --scheme $iscombining --usrcfg $usrcfg --matching $matching
    )
    errorCode=$?
    if [ $errorCode -ne 0 ]; then
        exit $errorCode
    fi
        
    cd ../../../../
fi

file="ssh-aerosol"
rm -f $file

#=== List of scons options ===
# profile: fast, debug (default: fast)
# intel: yes or no (default: no)
# line: yes or no (default: no)
# mode_cpp: strict or permissive (default: strict)
# mode_fortran: strict or permissive (default: permissive)
# openmp: yes or no (default: no)
# mpi: yes or no (default: no)
#=============================

cd src
scons -j8 profile=$profile chemistry=$chemistry openmp=$openmp sharedlib=$sharedlib

cd ..
ln -s src/ssh-aerosol ssh-aerosol


if [[ $iscombining != "no" ]]; then
    
    rootdir=$PWD
    path_ro2=$PWD/src/include/CHEMISTRY/user_defined/ro2_species.dat
    cd $cwd
    ln -s $path_ro2
    echo 
    echo "New files have been generated."
    echo "Please use these files in namelist.ssh"
    echo "--- reactions: $cwd/combined_reactions.dat"
    echo "--- gas-phase speices: $cwd/species-list-user.dat"
    echo "--- aerosol species: $cwd/species-list-aer-user.dat"
    echo "--- ro2 species: $cwd/ro2_species.dat"
    echo
    cd $rootdir
fi
