#!/bin/bash

cwd=$PWD

# Default options
cleanall="no"

# Read options
for i in "$@"
do
case $i in
# Read the option for Chemistry kinetic mechanism.
# Accepted values: racm, racm2, cb05, melchior2
# Default: chemistry=cb05
    -c=*|--chemistry=*)
    chemistry="${i#*=}"
    shift
    ;;
# For genoa
# Add a genoa option to clean unused folders/files
    -gcl=*|--genoaclean=*)
    gclean="${i#*=}"
    shift
    ;;
# Clean all
    -a)
    cleanall="yes"
    shift
    ;;
esac
done


# Clean option
if [[ $gclean ]]; then
    echo -e "Attempting to clean up unused folders/files for GENOA runs. CAUTION: This action cannot be reversed!\n"
    if [[ $gclean == "cleanall" ]]; then
        echo "Remove files without asking for further permission ..."
        cmd="y"
    else
        # Add a confirmation from the user before clean to make sure
        read -p "Are you sure you want to remove ALL items that are not used with the GENOA v3 algorithm? (y/N): " cmd
    fi
    # Delete items that fit the patterns - need to be updated
    if [[ $cmd == [yY] || $cmd == [yY][eE][sS] ]]; then
        patterns=("README.md" "graph*" "species-list*" "example_*" "results*" "coef_*" "INIT" "inputs" "namelist*" "photolysis" "run_testcase.py" "tools" "src/include/CHEMISTRY/*" "make.sh" "mymodules.sh" "history.md"  "LICENSE"  "Makefile"  "Makefile.hdr")
        for pattern in "${patterns[@]}"; do
            echo "Deleting $pattern ..."
            rm -rf $pattern
        done
        # Delete genoa comments from file: src/include/SOAP/species.cxx
        soap_sfile="src/include/SOAP/species.cxx"
        if [ -f "$soap_sfile" ]; then
            # Backup soap file
            sav_soap_sfile="${soap_sfile}.sav"
            echo "Saving orignial species.cxx file as $sav_soap_sfile ..."
            cp "$soap_sfile" "$sav_soap_sfile"
            
            # Use awk to skip lines between the start and end markers
            # Start marker: // GENOA DELETE DETECTOR START //
            # END marker: // GENOA DELETE DETECTOR END //
            awk "/\/\/ GENOA DELETE DETECTOR START \/\// {flag=1; next} /\/\/ GENOA DELETE DETECTOR END \/\// {flag=0; next} !flag" "$sav_soap_sfile" > "$soap_sfile"
            echo "Deletion completed in species.cxx file. Code between 'GENOA DELETE DETECTOR' markers has been removed."
        else
            echo "File $soap_sfile does not exist. Skip its deletion for the GENOA clean process."
        fi
        echo -e "Clean up is finished.\n"
    else
        echo -e "Clean up canceled by the user.\n"
    fi
fi

if [ -z $chemistry ]; then
    chemistry="cb05"
fi
#echo "Chemistry: $chemistry"

cd src
scons -c chemistry=$chemistry

rm -f `find -iname "*.bck"` 
rm -f `find -iname "*.o"`
rm -f `find -iname "*.os"`
rm -f `find -iname "ssh-aerosol-*"`
rm -f libssh-aerosol.so
rm -rf .scon*

cd ..

file="unifac.csv"
if [ -f $file ] 
then
    rm -f $file
fi


file="ssh-aerosol-cb05"
if [ -h $file ] 
then
    rm -f $file
fi

file="ssh-aerosol-cb05en"
if [ -h $file ] 
then
    rm -f $file
fi

file="ssh-aerosol"
if [ -h $file ] 
then
    rm -f $file
fi

file="namelist.out"
if [ -f $file ] 
then
    rm -f $file
fi

# if [ "$1" = "all" ]; then
#    lst=`ls -d tmp* 2>/dev/null`
#    for di in ${lst}; do
#       [ -d ${di} ] && { echo "removing ${di}...";  rm -rf ${di}; }
#    done
#    rm -rf ./exe-*
# fi
# echo "Remaining .nc files:"
# find -iname "*.nc"
# echo -n "Total directory space: "
# du -sh .


# Cleaning
if [ $cleanall == "yes" ]; then


    cd src/include

    echo "o-----------------------------o"
    echo "| Removing Emacs backup files |"
    echo "o-----------------------------o"
    rm -f -v `find . -iname "*~" -print`
    rm -f -v `find . -iname ".*~" -print`
    rm -f -v `find . -iname "\#*" -print`
    echo "o---------------------------o"
    echo "| Removing .o and .il files |"
    echo "o---------------------------o"
    rm -f -v `find . -iname "*.o" -print`
    rm -f -v `find . -iname "*.il" -print`    

    cd CHEMISTRY
    
    rm -f `find -iname "combined_reactions.dat"`
    rm -f `find -iname "combined_species.dat"`
    rm -f `find -iname "species-list-user.dat"`
    rm -f `find -iname "species-list-aer-user.dat"`
    rm -f `find -iname "combine_files.py"`
    rm -f `find -iname "replacement_species.py"`
    rm -f `find -iname "user_defined_scheme.py"`
    rm -f `find -iname "user_defined_scheme_tmp.cfg"`
    rm -f `find -iname "ro2_species.dat"`
    cd $cwd
fi
   
